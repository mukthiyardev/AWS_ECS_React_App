image: node:16
stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - b&p acr
  - deploy to K8S

build-job:
  stage: build
  script:
    - npm install
    - npm run build

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
sonarcloud-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main
    - develop

docker_build:
  stage: b&p acr
  image: docker:stable-dind
  services:
    - docker:dind
  script:
    - docker build -t $ACR_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker login -u $ACR_REGISTRY_USER -p $ACR_REGISTRY_PASSWORD $ACR_REGISTRY
    - docker push $ACR_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  variables:
    DOCKER_IMAGE_TAG: "$CI_COMMIT_REF_SLUG" # Store the CI_COMMIT_REF_SLUG in a variable

deploy:
  stage: deploy to K8S
  image:
    name: bitnami/kubectl:1.14
    entrypoint: [""]
  script:
    - echo "$KUBE_CONFIG" > kubeconfig.yml
    - TAG=$(docker search --no-trunc $ACR_REGISTRY_IMAGE | awk '{if(NR==2) print substr($0, index($0,$2))}') # Fetch latest image tag from registry
    - kubectl --kubeconfig=kubeconfig.yml apply -f $KUBE_DEPLOYMENT_FILE --namespace=$KUBE_NAMESPACE --record --record=true --image=$ACR_REGISTRY_IMAGE:$TAG
